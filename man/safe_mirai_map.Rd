% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{safe_mirai_map}
\alias{safe_mirai_map}
\title{safe_mirai_map}
\usage{
safe_mirai_map(.x, .f, ..., .args = list(), .promise = NULL)
}
\arguments{
\item{.x}{A list, vector, data frame or matrix to iterate over}

\item{.f}{A function to apply to each element / row}

\item{...}{Named objects referenced (but not defined) inside .f}

\item{.args}{Further constant arguments to .f, passed as a list}

\item{.promise}{As in mirai::mirai_map(); ignored in fallback}
}
\value{
A list of \strong{mirai} objects when daemons are available; otherwise a
plain list of results (same length as .x)
}
\description{
A drop-in replacement for mirai::mirai_map() that degrades to sequential
evaluation with purrr::map() when no daemons have been set.
}
\examples{
safe_mirai_map(1:3, ~.x * 2) # sequential if no daemons()
  mirai::daemons(2); # start two workers safe_mirai_map(1:3, ~.x * 2)[] #
  parallel, then collect
}
