% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/openalex.R
\name{get_openalex_articles}
\alias{get_openalex_articles}
\title{Retrieve Articles from OpenAlex (via openalexR)}
\usage{
get_openalex_articles(
  ids = NULL,
  query = NULL,
  year_filter = NULL,
  filters = NULL,
  fields = NULL,
  per_page = 200,
  max_results = Inf
)
}
\arguments{
\item{ids}{A character vector of identifiers (DOI, PMID, or OpenAlex IDs).
Example of OpenAlex IDs: \code{"https://openalex.org/W2741809807"}.}

\item{query}{A character string to match in titles/abstracts (similar to a
free-text search). Only one of \code{ids} or \code{query} can be non-NULL.}

\item{year_filter}{Publication year or range (e.g., \code{"2019"},
\code{"2016-2020"}, \code{"2010-"}, \code{"-2015"}). If provided, it
overrides any year filter in the \code{filters} list. Internally converted
to OpenAlex date filters.}

\item{filters}{A named list of additional filters to pass to
\code{openalexR}. For example, \code{filters = list(is_oa = TRUE, type =
  "journal-article")}. See \code{\link[openalexR]{oa_query}} for details.}

\item{fields}{A character vector of fields to return. In \code{openalexR},
you would typically pass these via \code{options = list(select = fields)}.
If \code{NULL}, all default columns from \code{openalexR} are retrieved.}

\item{per_page}{Approximate number of results fetched per page (default 100).
Passed to \code{openalexR::oa_fetch(..., per_page = ...)}.}

\item{max_results}{Maximum number of total results to return (default
\code{Inf}). If your query matches more records than \code{max_results},
the rest are omitted.}
}
\value{
A data frame of article data from OpenAlex, with a set of sanitized
columns at the beginning, identified by a dot prefix.
}
\description{
This function provides an interface similar to
\code{get_semanticscholar_articles()}, but calls the
\code{openalexR::oa_fetch()} function internally to query the OpenAlex
database of scholarly works. You can fetch works by ID (DOI, PMID, or
OpenAlex ID), or by a search query. Additional OpenAlex filters and a year
range can also be specified.
}
\examples{
\dontrun{
# Get by specific DOIs
get_openalex_articles(ids =
  c("10.1371/journal.pone.0266781", "10.1371/journal.pone.0267149"))

# Search for works with "machine learning" in title/abstract
get_openalex_articles(query = "machine learning")

# Filtering by is_oa and a year range
get_openalex_articles(
  query = "machine learning",
  year_filter = "2021-2022",
  filters = list(is_oa = TRUE)
)
}

}
