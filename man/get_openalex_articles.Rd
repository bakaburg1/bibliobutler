% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/openalex.R
\name{get_openalex_articles}
\alias{get_openalex_articles}
\title{Retrieve Articles from OpenAlex API (Direct httr2 Implementation)}
\usage{
get_openalex_articles(
  ids = NULL,
  query = NULL,
  year_filter = NULL,
  filters = NULL,
  fields = NULL,
  per_page = 200,
  max_results = Inf
)
}
\arguments{
\item{ids}{A character vector of identifiers (DOI, PMID, PMC ID, or OpenAlex
IDs). OpenAlex IDs can be provided as full URLs (e.g.,
\code{"https://openalex.org/W2741809807"}) or as short IDs (e.g.,
\code{"W2741809807"}). DOIs should be provided without the "doi:" prefix. PMIDs
should be numeric strings. PMC IDs should include the "PMC" prefix.}

\item{query}{A character string to search for in titles/abstracts/fulltext.
Only one of \code{ids} or \code{query} can be non-NULL.}

\item{year_filter}{Publication year or range (e.g., \code{"2019"}, \code{"2016-2020"},
\code{"2010-"}, \code{"-2015"}). If provided, it overrides any year filter in the
\code{filters} list.}

\item{filters}{A named list of additional filters to pass to OpenAlex. For
example, \code{filters = list(is_oa = TRUE, type = "journal-article")}. See
OpenAlex API documentation for available filters.}

\item{fields}{A character vector of fields to return. If \code{NULL}, default
fields are used (id, doi, title, abstract_inverted_index, authorships,
publication_year, publication_date, primary_location, locations, type,
type_crossref, open_access, cited_by_count, referenced_works,
related_works, ids).}

\item{per_page}{Number of results per page (default 200, max 200).}

\item{max_results}{Maximum number of total results to return (default \code{Inf}).
If your query matches more records than \code{max_results}, the rest are
omitted.}
}
\value{
A data frame of article data from OpenAlex with standardized
columns following the package conventions:
\itemize{
\item \code{.record_name} - Unique record identifier (e.g., "openalex_1")
\item \code{.paperId} - OpenAlex work ID (without URL prefix)
\item \code{.url} - Open access URL if available
\item \code{.title} - Article title
\item \code{.abstract} - Article abstract (reconstructed from inverted index)
\item \code{.authors} - Formatted author names (parsed and standardized)
\item \code{.year} - Publication year
\item \code{.journal} - Journal/venue name from primary location
\item \code{.pubtype} - Publication type (e.g., "journal-article")
\item \code{.is_open_access} - Logical indicating open access status
\item \code{.references} - List column of referenced work IDs
\item \code{.related} - List column of related work IDs
\item \code{.api} - Source API identifier ("openalex")
\item \code{.ids} - List column of data frames containing all available IDs
}
}
\description{
This function provides a direct implementation of OpenAlex API access using
httr2, offering better performance through parallel HTTP requests and more
control over API interactions. It follows the same interface patterns as
other API functions in the package.
}
\examples{
\dontrun{
# Get by specific DOIs
get_openalex_articles(ids =
  c("10.1371/journal.pone.0266781", "10.1371/journal.pone.0267149"))

# Get by OpenAlex IDs (full URL or short form)
get_openalex_articles(
  ids = c("W2741809807", "https://openalex.org/W123456")
)

# Get by PMIDs
get_openalex_articles(ids = c("12345678", "87654321"))

# Search for works with "machine learning" in title/abstract
get_openalex_articles(query = "machine learning")

# Filtering by is_oa and a year range
get_openalex_articles(
  query = "machine learning",
  year_filter = "2021-2022",
  filters = list(is_oa = TRUE)
)
}

}
